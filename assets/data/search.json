[ { "title": "AWS EC2의 기본적인 구성을 알아보는중", "url": "/posts/aws-ec2/", "categories": "Development, AWS", "tags": "AWS, EC2", "date": "2025-02-15 10:00:00 +0900", "snippet": "개요AWS Certification Developer Associate 과정을 공부하면서나 Architect 과정을 공부하면서 공통적으로 배울 것은 AWS를 기본적으로 사용하게 하는 EC2에 대한 것을 빠질 수 없다. 실무에서 간단히 사용하는 AWS의 구성을 살펴보면, 각 AWS 서비스가 이어짐을 확인할 수 있었다. 하지만, 공통적으로 사용하는 제일 중심이라 볼 수 있는 서비스는 바로 인프라를 기동시켜주는 EC2라 할 수 있다. 이전 공부 과정을 다시 새겨보며 블로그에 포스팅을 생각해보도록 하겠다.AWS EC2// image1" }, { "title": "어플리케이션 아키텍쳐에 대한 생각", "url": "/posts/diary_20250205/", "categories": "Diary", "tags": "Diary", "date": "2025-02-05 10:00:00 +0900", "snippet": "지금까지의 상황2022년 이후로 블로그에 글을 작성해보는 것도 오랜만이다. 지금 생각해보면 여러가지 일이 있었던 것 같다. 지금의 개발을 살려 이직을 준비하면서 이직한 직장에서의 적응과 부모님과의 마찰로 인해 우울증을 겪으며 여러 가치관을 찾고, 자신에 대해 알아가는 단계였다고 생각한다. 그러다보니 개발 공부와 블로그 포스팅을 소홀히 했었다. 아니, 정확히는 방치했다고 본다. 이런 시기까지 2년 가까이라는 시기를 겪고, 오랜만에 글을 써보게 된다. 나한테 포스팅을 하는 것은 마음의 여유를 가졌다 혹은 개발 공부를 다시 도전해본..." }, { "title": "Docker-compose를 이용한 MySQL 구축", "url": "/posts/Mysql/", "categories": "Development, Docker", "tags": "Mysql, Docker", "date": "2022-11-22 21:00:00 +0900", "snippet": "개요필자가 Spring Boot를 익히는 동안 데이터베이스의 연계도 필요하다 생각했기에, Spring에 DB접속하기 쉬운 MySQL를 구축할 예정을 잡았다. 원래대로라면 로컬에 MySQL를 넣으면 간단하게 될 일이였지만 나중에 로컬에서 MySQL를 삭제하기 귀찮을 뿐더러, MySQL를 관리할 수 있는 툴로 phpMyAdmin을 같이 구축하는 방향으로 생각을 하게 되었다. 필요할때 구축하고 바로 삭제 가능한 방향으로 하는 방법으로는 역시 가상환경 or 컨테이너를 이용하는 것이 제일 좋을 듯 싶다. 하지만 가상환경은 용량과 구축의..." }, { "title": "VSCode를 사용하여 Spring Boot API 작성", "url": "/posts/Spring-Boot/", "categories": "Development, Java", "tags": "VSCode, Java, SpringBoot", "date": "2022-11-20 17:00:00 +0900", "snippet": "개요필자가 이직을 하게 되면서 필요한 기술로, Java와 Spring Boot를 요구받게 되었다. 대학교 과제 이후로 Java를 다루어 본 적이 없어 언어를 처음부터 배운다는 생각으로 가지며, 환경 구축부터 시작을 하게 되었다. 여기서 필자는 VSCode 에디터를 다루는 것을 좋아하기에 IntelliJ 혹은 Eclipse와 같은 IDE를 사용하지 않고, VSCode내에서 디버그 및 빌드까지 가능한 환경을 만들고 싶다고 생각했다. 확실히 VSCode는 코드 에디터라는 가면을 쓴 IDE라고 생각할 정도의 확장 프로그램들이 다양해,..." }, { "title": "Github Actions를 이용해 CI/CD를 구축", "url": "/posts/Github-Actions/", "categories": "Development, CICD", "tags": "Github, CICD", "date": "2021-09-21 22:00:00 +0900", "snippet": "필자는 백엔드, 프론트엔드 이외에도 테스트, 빌드도 도맡아 하고 있다. 하지만 테스트도 수동으로 작성하는 경우도 있고, 이전까지는 빌드까지 수동으로 했었다. 필자가 다녔던 회사는 GitLab를 사용하고 있고 GitLab에 있는 CI/CD를 사용하기 시작했다. 그렇게 자연스럽게 CI/CD에 흥미가 생기기 시작했고, 직접 만져보는 기회는 없었다. 그래서 회사 밖에서 개인적으로 CI/CD에 대해서 알아보기로 하였다. 기본적으로 Jenkins라는 자동화 툴이 있는 것을 알았지만 로컬사이트로 직접 할 수는 없고 서버에 구축해야하는 것이..." }, { "title": "AWS Amplify를 이용해 github소스로 React웹 어플리케이션 구축", "url": "/posts/AWS-Amplify/", "categories": "Development, AWS", "tags": "AWS, Github, React", "date": "2021-09-16 22:00:00 +0900", "snippet": "회사 내에서는 웹 어플리케이션을 만들고 사내 서버로 호스팅, 빌드까지 겸해서 담당을 한 적이 있다. 이때 당시에는 사내 PC서버에 Docker로 빌드해 운영하였지만 최근들어 AWS를 다루기 시작했다. 필자도 처음에는 AWS에 대해서 들어보고 구경만 했지만, 실제로 만져본 경험은 없었다. 그러다 사이드 프로젝트를 개발하던 중 서버를 개설하고 직접 운용까지 생각하고 있지만 무지막지한 서버 유지 비용때문에 개인으로 서버를 여는 것이 어렵게 되었다. 그렇기 때문에 AWS에 눈을 들이게 되었다.처음 AWS에 계정을 가입하고 이것 저것 ..." }, { "title": "React Testing Library 컴포넌트 테스트 사용법", "url": "/posts/React-Testing-Library/", "categories": "Development, React", "tags": "React, Component, Test", "date": "2021-09-14 22:30:00 +0900", "snippet": "오랜만에 블로그를 다시 열어보고 작성해보게 되었다. 그동안 React에 대해서도 이것저것 많이 배우면서 동시에 사이드 프로젝트를 준비하면서 서버 구축에 클라우드 서버 시스템인 AWS를 사용해보았다. AWS에 대한 이야기는 나중에 하며 이번에는 React Testing Library에 대해 알아보도록 하겠다. 지금까지 React로 이루어진 테스트는 단위 테스트, Redux Sagas를 이용한 Saga 테스트만 진행을 해보았지만 컴포넌트 자체를 테스트해보는건 처음 보았고 신기했다. 어떻게 사용하는지 알아보도록 하겠다.참고로 필자는..." }, { "title": "React Redux를 사용해보자(Redux Hooks 추가 및 devtools 사용)", "url": "/posts/React-Redux2/", "categories": "Development, React", "tags": "React, Component, Redux", "date": "2020-10-26 22:30:00 +0900", "snippet": "지난 포스팅에서 Redux의 기본 개념을 설명했다면 이번 포스팅에서는 실제로 React를 이용한 Redux를 사용해보도록 하겠다. 물론 React에 프로젝트 작성에 대해 알고 있다면 이번 포스팅의 방법도 어렵지 않게 할 수 있다. 그렇다면 실제로 어떻게 사용하는지 확인해보도록 해보자. 이번 Redux에서는 기본적인 기능에 추가로 Selector와 Action을 쉽게 불러올 수 있는 Redux Hooks를 이용해보았다.자세한 파일 확인과 내용을 보고 싶다면 Git Repository를 올려놓았으므로 혹시 궁금한 것이나 피드백으로..." }, { "title": "React Redux의 원리", "url": "/posts/React-Redux/", "categories": "Development, React", "tags": "React, Component, Redux", "date": "2020-10-23 22:00:00 +0900", "snippet": "필자는 React에 적응이 안됐던 시기에 제일 불편했던 것은 바로 Local State였다. 하나의 컴포넌트를 생성하고 State를 지정하고 난 이후 컴포넌트가 소멸될 시에 State도 같이 소멸이 되기 때문에, 다른 컴포넌트로간의 이동이 매우 불편했다. 거기다 컴포넌트의 State를 다른 컴포넌트로 지정하기 위해서는 props, state를 사용해야 하고, 그것이 너무 먼 단계에 위치하면 두말할 것도 없이 코드가 더 복잡해진다. 이것을 해결할 수 있는 것이 바로 Redux라는 녀석이다. Redux는 React에서만 사용하는 ..." }, { "title": "React StoryBook의 기초(스토리 작성 / 스토리북 실행)", "url": "/posts/react-storybook/", "categories": "Development, React", "tags": "React, Component, StoryBook", "date": "2020-10-19 21:10:00 +0900", "snippet": "본 포스트는 MacOS 10.15.7 을 기준으로 작성하였습니다.필자는 직접적으로 React를 다루면서 Storybook 프로젝트를 다뤄본 적이 없었다. 팀 내 어플리케이션 개발을 위해서는 팀 공용 컴포넌트를 사용하고 있지만 필자는 단지 써보기만 할 뿐 직접 컴포넌트를 작성한 적이 없다. 팀 공용 컴포넌트는 Storybook으로 이루어져 있어서 컴포넌트 사용전에 다양한 테스트겸을 할 수 있게 된다. 이러한 이유로 컴포넌트 작성을 위해서 Storybook을 직접 공부하기로 한 계기가 되었다.서론이 길어졌고 이번에 다뤄볼 포스팅은..." }, { "title": "Material-UI에 대해서 알아보고 실제로 컴포넌트를 이용하기", "url": "/posts/React-Material-UI/", "categories": "Development, React", "tags": "React, Component, MaterialUI", "date": "2020-10-10 23:10:00 +0900", "snippet": "본 포스트는 MacOS 10.15.7 을 기준으로 작성하였습니다.필자는 React를 사용하면서 UI에 대한 프레임워크로는 Material-UI라는 프레임워크를 사용하고 있다. 상당히 깔끔한 디자인에다 편집하기 쉬운 컴포넌트들로 구성되어 있으며, CSS도 어렵지 않게 수정할 수 있다는 것이 매력적이였다. 사실상 컴포넌트들로 세팅할 수 있어서 단지 불러오기만 하면 알아서 구성할 수 있고 템플릿 작업 시간도 덜 수 있어서 좋다.지금은 프론트, 백엔드 웹 개발을 하고 있어서 프론트에 대한 부담과 디자인에 대한 부담을 동시에 줄일 수 ..." }, { "title": "React란 무엇인가?", "url": "/posts/React/", "categories": "Development, React", "tags": "React, Component, Frontend", "date": "2020-10-07 21:35:00 +0900", "snippet": "필자는 프로젝트를 진행할 때 백엔드, 프론트엔드를 Django 하나로 통일해서 사용하고 있었다. 템플릿과 뷰를 따로 관리할 수 있기에 나름 편리하게 사용하고 있었다 생각했는데 최근 백엔드와 프론트엔드의 프레임워크를 나누기 시작하여, 백엔드는 Django Restframework를 사용하며 프론트엔드는 React.js를 쓰는 방침으로 개발하기 시작했다. 우선 두 어플리케이션 간에 연결은 Restful API를 사용하며 React에 대해 알아가며 Node.js에 대해서도 이것저것 익히면서 공부해나가고 있었다. 이전 자바스크립트와 ..." }, { "title": "Docker-compose의 운용과 작성방식", "url": "/posts/Docker-compose/", "categories": "Development, Docker", "tags": "Docker, Virtual, Container, Image", "date": "2020-10-06 22:00:00 +0900", "snippet": "본 포스트는 MacOS 10.15.7 을 기준으로 작성하였습니다.저번 포스팅에서 Dockerfile을 이용하여 컨테이너를 통해서 이미지를 빌드시키는 방법을 설명했었다. 이번에는 이러한 컨테이너들을 다중으로 존재할 때 쉽게 제어가 가능한 Docker-compose 에 대해서 알아보도록 하겠다. Docker-compose 는 Docker를 이용하기 위한 툴로써 여러가지 컨테이너들을 관리 혹은 실행하기에 아주 편리함을 가지고 있다. 특히 docker의 명령어로 사용하는 run의 경우 환경 설정을 하고 실행을 위해서는 몇번 써야 하는..." }, { "title": "Dockerfile 작성 및 빌드를 해보자", "url": "/posts/Dockerfile/", "categories": "Development, Docker", "tags": "Docker, Virtual, Container, Image", "date": "2020-10-02 20:40:00 +0900", "snippet": "본 포스트는 MacOS 10.15.7 을 기준으로 작성하였습니다.필자는 프로젝트를 개발하면서 서버 인프라에 Docker를 사용하고 있다. 그러면서 Docker에 이미지를 생성해 직접 빌드하는 경우도 종종 볼 수 있었다. 이번에는 직접 Docker에 이미지 생성을 하는 Dockerfile 이라는 개념에 대해 설명하도록 하겠다. 이전 포스팅에서 이미지가 발주하는 물품들의 리스트라고 비유를 한 적이 있다. Dockerfile 은 이런 리스트들을 쌓는 순서도 같은 개념이라고 보면 된다. 실질적인 문서형태라고 생각하면 될 듯하다.예를 ..." }, { "title": "Docker의 기본", "url": "/posts/Docker/", "categories": "Development, Docker", "tags": "Docker, Virtual, Container, Image", "date": "2020-09-28 22:25:00 +0900", "snippet": "필자는 웹 어플리케이션 개발을 하던 시절에 인프라나 백엔드에 대해서 많이 몰랐던 시기이고 이것저것 공부를 하던 도중에 Docker를 알게 되면서 이것 저것 공부한 내용을 여기에 적어보기로 하겠다. 대체로 서버에 주로 사용하는 콘테이너형 가상 플랫폼으로 Docker를 주로 애용하고 있다. 필자도 서버의 일부중 Docker 컨테이너를 직접 빌드해 사용해본 경험이 있지만, 아직 개념이 잡히지 않은 채 했기 때문에 실제로 다뤄보고 이론을 공부하기 시작했다. 조금씩 Docker에 대해 공부한 내용들을 포스팅으로 적어보기로 했다.Dock..." }, { "title": "Django restframework의 filtering / ordering, APIview", "url": "/posts/Python-Django-django_restframework2/", "categories": "Development, Python, Django Restframework", "tags": "Django, DjangoRestframework", "date": "2020-09-25 21:00:00 +0900", "snippet": "본 포스트는 MacOS 10.15.7 을 기준으로 작성하였습니다.저번에 작성한 포스트에서 Django Restframework를 이용하여 Restful Api로 만들어 보는 포스트를 사용해보았다. 필자는 현재 개발하는 프로젝트에서 모델에서 직접 가져오는 View이외에도 다른 Request를 불러올 시 백엔드에서 처리하는 함수에도 사용하며 여러 부분에서 사용하는 url을 작성했다. 이번에 작성한 코드를 리팩토링겸 재정리를 위해 작성해보게 되었다.이전에 포스팅한 프로젝트에 이어서 여러 응용하는 법에 대해 추가로 작성해보았다. 이전..." }, { "title": "Django restframework의 기본 및 시작하기", "url": "/posts/Python-Django-django_restframework1/", "categories": "Development, Python, Django Restframework", "tags": "Django, DjangoRestframework", "date": "2020-09-23 21:20:00 +0900", "snippet": "본 포스트는 MacOS 10.15.6 을 기준으로 작성하였습니다.Django는 웹 프레임워크로 이용하면서 동시에 RestfulAPI 전용의 어플리케이션으로도 활용할 수 있다. RestfulAPI 서버로 활용가능하며 때에 따라서는 백앤드 어플리케이션으로 활용할 수 있다. 필자도 React.Js를 작성하면서 DB에서 불러내는 데이터를 파싱하기 위해 백앤드 전용 어플리케이션으로 Django Rest Framework를 사용하고 있다. 그렇기에 React.Js는 프론트 전용으로만 사용할 수 있어 프론트엔드 백엔드의 정의를 확실히 구분..." }, { "title": "Pandas에서 Excel파일을 데이터프레임화로 변경 (pandas.read_excel)", "url": "/posts/Python-Pandas-read_excel/", "categories": "Development, Python, Pandas", "tags": "Pandas, read_excel, Dataframe", "date": "2020-09-15 22:35:00 +0900", "snippet": "본 포스트는 MacOS 10.15.6 을 기준으로 작성하였습니다.간혹 개발을 하면서 필자는 엑셀파일을 직접 불러들여서 그 안에 데이터를 분석 및 출력하는 작업을 맡고 있다. 직접 파이썬을 사용하며 엑셀파일까지 불러들이는 것은 가능하지만, 실제로 데이터화시키는 것에 큰 곤란함이 있었다. 특히 데이터 관련은 Pandas의 Dataframe이 쉽게 접하기 때문에, 일일이 데이터를 불러들여 리스트화시킨 다음 다시 그걸 Dataframe화 시키고 행과 열을 맞추는 귀찮은 작업들을 연발하게 된다.그것들을 무시하고 한방에 Datafram..." }, { "title": "Python전용 테스트 라이브러리 Pytest", "url": "/posts/Python-pytest/", "categories": "Development, Python, Pytest", "tags": "Pytest", "date": "2020-09-14 15:30:00 +0900", "snippet": "본 포스트는 MacOS 10.15.6 을 기준으로 작성하였습니다.개발하는 사람들에게 있어서 꼭 필요한 것 중 하나는 바로 테스트이다. 저마다의 개발언어에 맞는 테스트 방법이 있으며 이번에 소개시켜드릴 기능은 파이썬의 테스트 라이브러리인 Pytest를 소개시켜드릴까 한다. 필자도 최근 Django를 사용하면서 테스트 방법을 찾던 도중 Pytest를 알게되었고, 쉽게 테스트 할 수 있다는 것을 알게 되었다.우선 Pytest를 실행시키기 위해서는 당연히 라이브러리를 설치해줘야 한다. 아마 Anaconda로 실행시키는 프로젝트라면 기..." }, { "title": "Pandas Dataframe 생성 및 이용", "url": "/posts/Pandas-Dataframe-create/", "categories": "Development, Python, Pandas", "tags": "Dataframe", "date": "2020-04-25 13:30:00 +0900", "snippet": "Pandas Dataframe 생성 및 이용데이터프레임 생성데이터프레임을 추가할 시에는 Dict형태로 Key에는 행의 이름을 입력 Value에 각 행별 데이터를 열순번으로 넣어야 한다.12345678import pandas as pddata_a = [&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;] # a라는 행의 데이터 열순번별 리스트data_b = [&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;] # b라는 행의 데이터 열순번별 리스트df = pd..." } ]
